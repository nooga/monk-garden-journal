---
<script>
  import { useState } from 'astro:react';
  import { uploadImage, saveEntry } from '../utils/netlifyBlob';

  const EntryForm = () => {
    const [title, setTitle] = useState('');
    const [content, setContent] = useState('');
    const [image, setImage] = useState(null);
    const [loading, setLoading] = useState(false);
    const [error, setError] = useState('');

    const handleImageChange = (event) => {
      setImage(event.target.files[0]);
    };

    const handleSubmit = async (event) => {
      event.preventDefault();
      setLoading(true);
      setError('');

      try {
        const imageUrl = await uploadImage(image);
        await saveEntry({ title, content, imageUrl });
        setTitle('');
        setContent('');
        setImage(null);
      } catch (err) {
        setError('Failed to save entry. Please try again.');
      } finally {
        setLoading(false);
      }
    };

    return (
      <form onSubmit={handleSubmit} class="space-y-4">
        <div>
          <label class="block text-sm font-medium text-gray-700">Title</label>
          <input
            type="text"
            value={title}
            onInput={(e) => setTitle(e.target.value)}
            required
            class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm focus:ring focus:ring-opacity-50"
          />
        </div>
        <div>
          <label class="block text-sm font-medium text-gray-700">Content</label>
          <textarea
            value={content}
            onInput={(e) => setContent(e.target.value)}
            required
            class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm focus:ring focus:ring-opacity-50"
          />
        </div>
        <div>
          <label class="block text-sm font-medium text-gray-700">Image</label>
          <input
            type="file"
            accept="image/*"
            onChange={handleImageChange}
            required
            class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm focus:ring focus:ring-opacity-50"
          />
        </div>
        {error && <p class="text-red-500">{error}</p>}
        <button
          type="submit"
          disabled={loading}
          class="w-full bg-blue-600 text-white py-2 rounded-md hover:bg-blue-700 transition"
        >
          {loading ? 'Saving...' : 'Add Entry'}
        </button>
      </form>
    );
  };

  export default EntryForm;
</script>
---